{"version":3,"sources":["app.start.coffee","api/crypto.service.coffee","api/relay.service.coffee","request-pane/request-pane.controller.coffee","request-pane/request-pane.directive.coffee"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["angular.module('app', [])\n\n# filter to test object emptiness\nangular.module('app').filter 'isEmpty', ->\n  (obj) ->\n    for key of obj\n      if obj.hasOwnProperty(key)\n        return false\n    true\n","class CryptoService\n\n  # You can provide your localhost:port value instead of test\n  # to test local ZAX dashboard with local ZAX relay.\n  # Take care not to mix up ports of these services when\n  # both are running locally\n  relayUrl: ->\n    org = @$window.location.origin\n    test = 'https://zax_test.vault12.com'\n    return if org.includes 'localhost' then test else org\n\n  constructor: (@$window)->\n    @glow = @$window.glow\n    @nacl = @$window.nacl_factory.instantiate()\n    @Mailbox = @glow.MailBox\n    @Relay = @glow.Relay\n    @KeyRing = @glow.KeyRing\n    @Keys = @glow.Keys\n    @CryptoStorage = @glow.CryptoStorage\n    @CryptoStorage.startStorageSystem new @glow.SimpleStorageDriver(@relayUrl())\n\n    # set the ajax handler. to jQuery\n    @glow.Utils.setAjaxImpl (url, data)->\n      $.ajax\n        method: 'POST'\n        url: url\n        headers:\n          'Accept': 'text/plain'\n          'Content-Type': 'text/plain'\n        data: data\n        responseType: 'text'\n        timeout: 2000\n      .then (response)->\n        response\n\nangular\n  .module 'app'\n  .service 'CryptoService', [\n    '$window'\n    CryptoService\n  ]\n","class RelayService\n  host: \"\"\n  headers: {\"Content-Type\": \"text/plain\"}\n  mailboxes: {}\n\n  constructor: (@$http, @$q, @CryptoService, $location) ->\n    @host = @CryptoService.relayUrl()\n    @_newRelay()\n\n  # relay commands\n  messageCount: (mailbox)->\n    @_defer(=> mailbox.connectToRelay(@relay)).then =>\n      @_defer(=> mailbox.relay_count())\n\n  getMessages: (mailbox)->\n    @_defer(=> mailbox.getRelayMessages(@relay))\n\n  deleteMessages: (mailbox, messagesToDelete = null)->\n    if !messagesToDelete\n      messagesToDelete = mailbox.relay_nonce_list()\n    @_defer(=> mailbox.connectToRelay(@relay)).then =>\n      @_defer(=> mailbox.relay_delete(messagesToDelete))\n\n  # mailbox wrapper\n  newMailbox: (mailboxName = \"\", options = {})=>\n    # make our mailboxes\n    if options.secret\n      mailbox = new @CryptoService.Mailbox.fromSecKey(options.secret.fromBase64(),mailboxName)\n      console.log \"created mailbox #{mailboxName}:#{options.secret} from secret\"\n    else if options.seed\n      mailbox = new @CryptoService.Mailbox.fromSeed(options.seed, mailboxName)\n      console.log \"created mailbox #{mailboxName}:#{options.seed} from seed\"\n    else\n      mailbox = new @CryptoService.Mailbox(mailboxName)\n      console.log \"created mailbox #{mailboxName} from scratch\"\n\n\n    # share keys among mailboxes\n    for name, mbx of @mailboxes\n      mbx.keyRing.addGuest(mailbox.identity, mailbox.getPubCommKey())\n      mailbox.keyRing.addGuest(mbx.identity, mbx.getPubCommKey())\n\n    # save the mailbox\n    @mailboxes[mailbox.identity] = mailbox if mailbox.identity\n\n  destroyMailbox: (mailbox)->\n    for name, mbx of @mailboxes\n      if mailbox.keyRing.storage.root == mbx.keyRing.storage.root\n        mailbox.selfDestruct(true)\n        delete @mailboxes[name]\n\n  sendToVia: (recipient, mailbox, message)->\n    deffered = @$q.defer()\n    deffered.resolve mailbox.sendToVia(recipient, @relay, message)\n    deffered.promise\n  # internal stuffs\n\n  # shortcut for converting .done to promise\n  _defer: (fnToDefer)->\n    deffered = @$q.defer()\n    deffered.resolve fnToDefer()\n    deffered.promise\n\n  _newRelay: ->\n    @relay = new @CryptoService.Relay(@host)\n    # @relay.client_token_text = @_randomString()\n\n  _concat: (arrays...)->\n    concatArray = []\n    for array in arrays\n      for item in array\n        concatArray.push item\n    concatArray\n\n  _randomString: (length=32) ->\n    id = \"\"\n    id += Math.random().toString(36).substr(2) while id.length < length\n    id.substr 0, length\n\nangular\n  .module 'app'\n  .service 'RelayService', [\n    '$http'\n    '$q'\n    'CryptoService'\n    '$location'\n    RelayService\n  ]\n","class RequestPaneController\n  mailboxPrefix: \"_mailbox\"\n  constructor: (RelayService, $scope)->\n    # some names to play with\n    first_names = [\"Alice\",\"Bob\",\"Charlie\",\"Chuck\",\"Dave\",\"Erin\",\"Eve\",\"Faith\",\n             \"Frank\",\"Mallory\",\"Oscar\",\"Peggy\",\"Pat\",\"Sam\",\"Sally\",\"Sybil\",\n             \"Trent\",\"Trudy\",\"Victor\",\"Walter\",\"Wendy\"].sort ->\n               .5 - Math.random()\n    @names = []\n    for i in [1..20]\n      for name in first_names\n        if i == 1\n          @names.push \"#{name}\"\n        else\n          @names.push \"#{name} #{i}\"\n\n\n    # what mailboxes are we looking at?\n    $scope.mailboxes = RelayService.mailboxes\n    $scope.relay = RelayService.relay\n    $scope.activeMailbox = null\n\n    # assume we'll need to add a mailbox to play with\n    $scope.mailbox = {}\n    $scope.addMailboxVisible = true\n    $scope.quantity = 3\n\n    # mailbox commands\n    $scope.messageCount = (mailbox)->\n      RelayService.messageCount(mailbox).then (data)->\n        mailbox.messageCount = \"#{$scope.relay.result}\"\n\n    $scope.getMessages = (mailbox)->\n      RelayService.getMessages(mailbox).then (data)->\n        if !mailbox.messages\n          mailbox.messages = []\n          mailbox.messagesNonces = []\n        for msg in mailbox.lastDownload\n          unless mailbox.messagesNonces.indexOf(msg.nonce) != -1\n            console.log \"incoming message:\", msg\n            mailbox.messagesNonces.push msg.nonce\n            mailbox.messages.push msg\n\n    $scope.deleteMessages = (mailbox, messagesToDelete = [])->\n      RelayService.deleteMessages(mailbox, messagesToDelete).then ->\n        if messagesToDelete.length == 0\n          mailbox.messages = []\n          mailbox.messagesNonces = []\n        else\n          for msg in messagesToDelete\n            index = mailbox.messagesNonces.indexOf(msg)\n            mailbox.messagesNonces.splice(index, 1)\n            mailbox.messages.splice(index, 1)\n\n    $scope.sendMessage = (mailbox, outgoing)=>\n      RelayService.sendToVia(outgoing.recipient, mailbox, outgoing.message).then (data)->\n        $scope.outgoing = {message: \"\", recipient: \"\"}\n\n    $scope.deleteMailbox = (mailbox)=>\n      name = mailbox.identity\n      RelayService.destroyMailbox(mailbox)\n      localStorage.removeItem \"#{@mailboxPrefix}.#{name}\"\n\n    # show the active mailbox messages\n    $scope.selectMailbox = (mailbox)->\n      $scope.activeMailbox = mailbox\n\n    # internals\n    $scope.addMailbox = (name, options)=>\n      if localStorage.setItem \"#{@mailboxPrefix}.#{name}\", RelayService.newMailbox(name, options).identity\n        $scope.newMailbox = {name: \"\", options: null}\n\n    $scope.addMailboxes = (quantityToAdd)=>\n      for i in [1..quantityToAdd]\n        $scope.addMailbox @names[1]\n        @names.splice 0,1\n      quantityToAdd = 0\n\n    $scope.addPublicKey = (mailbox, key)=>\n      if mailbox.keyRing.addGuest key.name, key.key\n        $scope.pubKey = {name: \"\", key: \"\"}\n\n    # add any mailbox stored in localStorage\n    for key in Object.keys localStorage\n      $scope.addMailbox(localStorage.getItem(key)) if key.indexOf(@mailboxPrefix) == 0\n\nangular\n  .module 'app'\n  .controller 'RequestPaneController', [\n    \"RelayService\"\n    \"$scope\"\n    RequestPaneController\n  ]\n","requestPane = (RequestService, LoggerService, base64)->\n  directive =\n    transclude: true\n    restrict: 'E'\n    templateUrl: \"request-pane/request-pane.template.html\"\n    controller: \"RequestPaneController\"\n    scope: \"=\"\n    link: (scope, attrs, element)->\n\n  directive\n\nangular\n  .module('app')\n  .directive \"requestPane\", [ requestPane ]\n"],"sourceRoot":"/source/"}